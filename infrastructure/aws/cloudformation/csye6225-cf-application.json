{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description" : "csye6225 spring2018 for assignment6, using free-tier AWS resources.",
    "Resources" : {
      "MyEC2Instance" : {
          "Type" : "AWS::EC2::Instance",
          "Properties" : {
             "ImageId" : { "Ref" : "ImageIdOfEC2Instance" },
             "InstanceType" : { "Ref" : "TypeOfEC2Instance" },
             "DisableApiTermination" : "true",
             "InstanceInitiatedShutdownBehavior" : "stop",
             "SubnetId": {"Ref" : "EC2SubnetId"},
             "SecurityGroupIds": [{"Ref" : "WebServerSecurityGroup_Id"}],
             "BlockDeviceMappings" : [ {
                   "DeviceName" : "/dev/sdf",
                   "Ebs" : {
                      "VolumeType" : { "Ref" : "EC2VolumeType" },
                      "DeleteOnTermination" : "false",
                      "VolumeSize" : { "Ref" : "EC2VolumeSize" }
                   }
             } ],
             "IamInstanceProfile": { "Ref" : "CodeDeployEC2ServiceRoleInsProfile" },
             "Tags" : [ {
                    "Key" : { "Ref" : "TagKey" },
                    "Value" : { "Ref" : "EC2InstanceTagValue" }
             } ],
             "UserData": {
                 "Fn::Base64": {
                     "Fn::Join": [
                         "\n",
                         [
                             "#!/bin/bash -xe ",
                             "sudo apt-get update ",
                             "sudo apt-get install openjdk-8-jdk -y",
                             "sudo apt-get install ruby -y ",
                             "sudo apt-get install wget -y ",
                             "sudo apt-get install python -y ",
                             "sudo apt-get update ",
                             "sudo wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install ",
                             "sudo chmod +x ./install ",
                             "sudo ./install auto ",
                             "sudo service codedeploy-agent start ",
                             "sudo apt-get install tomcat8 -y ",
                             {
                                 "Fn::Join": [
                                     "",
                                     [
                                         "echo 'JAVA_OPTS=\"${JAVA_OPTS} -Dspring.datasource.url=\\\"jdbc:mysql://",
                                         {
                                             "Fn::GetAtt": [
                                                 "MyDBInstance",
                                                 "Endpoint.Address"
                                             ]
                                         },
                                         ":3306/csye6225\\\"\"' >> /etc/default/tomcat8"
                                     ]
                                 ]
                             },
                             "echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.username=\"",{"Ref":"rdsParamUsername"},"\"\"' >> /usr/share/tomcat8/bin/setenv.sh \n",
                             "echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.password=\"",{"Ref":"rdsParamPassword"},"\"\"' >> /usr/share/tomcat8/bin/setenv.sh \n",
                             "sudo service tomcat8 restart "
                         ]
                     ]
                 }
             }
          }
      },

      "CodeDeployEC2ServiceRoleInsProfile": {
    			"Type": "AWS::IAM::InstanceProfile",
    			"Properties": {
    				"Path": "/",
    				"Roles":[ "CodeDeployEC2ServiceRole"]
    			}
    	},

      "myDynamoDBTable" : {
        "Type" : "AWS::DynamoDB::Table",
        "Properties" : {
          "AttributeDefinitions" : [
            {
              "AttributeName" : "id",
              "AttributeType" : "S"
            }
          ],
          "KeySchema" : [
            {
              "AttributeName" : "id",
              "KeyType" : "HASH"
            }
          ],
          "ProvisionedThroughput" : {
              "ReadCapacityUnits" : "5",
              "WriteCapacityUnits" : "5"
            },
            "TableName" : "csye6225"
          }
      },
      "RecordServiceS3Bucket" : {
  	     "Type" : "AWS::S3::Bucket",
         "Properties" : {
      	    "BucketName" : { "Ref" : "WebAppS3BucketName" }
      	  }
      },

     "MyDBInstance" : {
       "Type" : "AWS::RDS::DBInstance",
       "Properties" : {
          "AllocatedStorage" : { "Ref" : "rdsParamStorageSize" },
          "DBName" : { "Ref" : "rdsParamDBName" },
          "Engine" : { "Ref" : "rdsParamEngine" },
          "EngineVersion" : { "Ref" : "rdsParamEngineVersion" },
          "DBInstanceClass" :  { "Ref" : "rdsParamDBInsClass" },
          "MultiAZ" : "false",
          "DBInstanceIdentifier" : { "Ref" : "rdsParamDBInsId" },
          "VPCSecurityGroups": [{"Ref" : "RDSSecurityGroup_ID"}],
          "DBSubnetGroupName": { "Ref" : "DBSubnetGroup" },
          "MasterUsername" : {"Ref" : "rdsParamUsername"},
          "MasterUserPassword" : {"Ref" : "rdsParamPassword"},
          "PubliclyAccessible" : "false",
          "Tags" : [ { "Key" : "Name", "Value" : { "Ref" : "rdsParamDBTagVal" } } ]
        }
      }

    },
    "Outputs": {
        "InstanceId": {
            "Description": "InstanceId of the newly created EC2 instance",
            "Value": {
                "Ref": "MyEC2Instance"
            }
        },
        "AZ": {
            "Description": "Availability Zone of the newly created EC2 instance",
            "Value": {
                "Fn::GetAtt": [
                    "MyEC2Instance",
                    "AvailabilityZone"
                ]
            }
        },
        "PublicDNS": {
            "Description": "Public DNSName of the newly created EC2 instance",
            "Value": {
                "Fn::GetAtt": [
                    "MyEC2Instance",
                    "PublicDnsName"
                ]
            }
        },
        "PublicIP": {
            "Description": "Public IP address of the newly created EC2 instance",
            "Value": {
                "Fn::GetAtt": [
                    "MyEC2Instance",
                    "PublicIp"
                ]
            }
        }
    },

    "Parameters" : {
        "ImageIdOfEC2Instance": {
          "Description" : "ImageId of EC2 Instance",
          "Type": "String",
          "Default" : "ami-66506c1c"
        },
        "TypeOfEC2Instance": {
          "Description" : "InstanceType of EC2 Instance",
          "Type": "String",
          "Default" : "t2.micro"
        },

        "WebServerSecurityGroup_Id" : {
          "Description" : "Group ID of Web Server Security Group",
          "Type": "String",
          "Default" : " "
        },

        "EC2SubnetId" : {
          "Description" : "EC2 Subnet ID",
          "Type": "String",
          "Default" : " "
        },

        "RDSSecurityGroup_ID" : {
          "Description" : "Security Group ID of RDS",
          "Type": "String",
          "Default" : " "
        },

        "EC2VolumeType" : {
          "Description" : "EC2 Volume type",
          "Type" : "String",
          "Default" : "gp2"
        },

        "EC2VolumeSize" : {
          "Description" : "EC2 Volume size",
          "Type" : "String",
          "Default" : "16"
        },

        "TagKey" : {
          "Description" : " EC2 instance tag Key ",
          "Type" : "String",
          "Default" : "Name"
        },

        "EC2InstanceTagValue" : {
            "Description" : " EC2 instance tag Value ",
            "Type" : "String",
            "Default" : "MyEC2ForCodeDeployInstance"
        },

        "WebAppS3BucketName" : {
          "Description" : "S3 Bucket Name for storing profile pictures uploaded by users",
          "Type" : "String",
          "Default" : "web-app.csye6225-spring2018-guju.me"

        },

        "rdsParamStorageSize" : {
          "Description" : "Allocated Storage for RDS",
          "Type" : "String",
          "Default" : "10"
        },

        "rdsParamDBName" : {
          "Description" : "DB Name for RDS",
          "Type" : "String",
          "Default" : "csye6225"
        },

        "rdsParamEngine" : {
          "Description" : "Engine Type for RDS DB",
          "Type" : "String",
          "Default" : "MySQL"
        },

        "rdsParamEngineVersion" : {
          "Description" : "Engine version for RDS DB",
          "Type" : "String",
          "Default" : "5.6.37"
        },

        "rdsParamDBInsClass" : {
          "Description" : "Instance Class for RDS DB",
          "Type" : "String",
          "Default" : "db.t2.medium"
        },

        "rdsParamDBInsId" : {
          "Description" : "Instance Identifier for RDS DB",
          "Type" : "String",
          "Default" : "csye6225-spring2018"
        },

        "rdsParamUsername" : {
  				"Description": "database username",
  				"Type" : "String",
          "Default" : "csye6225master"
  			},

  			"rdsParamPassword" : {
  				"Description" : "database password",
  				"Type" : "String",
          "Default" : "csye6225password"
  			},

        "rdsParamDBTagVal" : {
          "Description" : "Tag Value for RDS DB instance",
          "Type" : "String",
          "Default" : "csye6225"
        },

        "DBSubnetGroup" : {
          "Description" : "Group Name for RDS DataBase Subnet Group",
          "Type" : "String",
          "Default" : "RDS_DBSubnetGroup"
        }

    }


 }
